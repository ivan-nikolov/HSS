@inject Hss.Services.Data.Services.IServicesService servicesService;
@inject Hss.Services.Data.Categories.ICategoriesService categoriesService;
@inject NavigationManager navManager;
@using Hss.Web.ViewModels.Components.RazorComponents;

<div>
    <CascadingValue Value="category.CurrentCategoryId">
        <CategoriesCardsListComponent OnSelectCategory="this.OnCategorySelect"></CategoriesCardsListComponent>
    </CascadingValue>

    <ServicesCardListComponent CategoryName="@this.category.Name" CategoryId="@(this.category.CurrentCategoryId.HasValue ? this.category.CurrentCategoryId.Value : 0)"></ServicesCardListComponent>

    <hr />
    <button class="btn btn-info ml-auto" @onclick="() => this.OnBackClicked()" disabled="@this.isDisabled" hidden="@this.isDisabled">Back</button>
</div>
@code {
    private bool isDisabled;

    private CategoriesAllModel category;

    [Parameter]
    public int Id { get; set; }

    protected override void OnInitialized()
    {
        this.isDisabled = true;
        this.category = new CategoriesAllModel();
        this.category.Id = this.Id;

        if (this.Id != 0)
        {
            this.OnCategorySelect(this.Id);
        }
    }

    private void OnCategorySelect(int categoryId)
    {
        this.DisableBackButton(categoryId);
        this.category = this.categoriesService.GetAllCategories<CategoriesAllModel>().FirstOrDefault(c => c.Id == categoryId);
    }

    private void OnBackClicked()
    {
        this.DisableBackButton(this.category.ParentCategoryId);
        if (this.category.ParentCategoryId.HasValue)
        {
            this.category = this.categoriesService.GetAllCategories<CategoriesAllModel>().FirstOrDefault(c => c.Id == this.category.ParentCategoryId.Value);
            this.navManager.NavigateTo($"/Home/Index/{this.category.Id}");
        }
        else
        {
            this.category = new CategoriesAllModel();
            this.navManager.NavigateTo("/");
        }
    }

    private void DisableBackButton(int? id)
    {
        if (id.HasValue)
        {
            this.isDisabled = false;
        }
        else
        {
            this.isDisabled = true;
        }
    }
}
