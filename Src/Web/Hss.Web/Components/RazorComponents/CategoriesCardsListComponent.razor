@using System.Security.Claims
@using Hss.Web.ViewModels.Components.RazorComponents
@using Hss.Common
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
@inject Hss.Services.Data.Categories.ICategoriesService categoriesService

    <div class="row d-flex justify-content-center">
        @foreach (var category in this.categories)
        {
            @if (category.ChildCategoriesCount == 0 && category.ServicesCount == 0)
            {
                this.isCardDisabled = true;
            }
            else
            {
                this.isCardDisabled = false;
            }

            <div class="col-3">
                <div class="card">
                    <img class="card-img-top" src="@category.ImageUrl" alt="@category.Name image" style="width:13rem;">
                    <div class="card-body">
                        <h5 class="card-title">@category.Name</h5>
                        <p class="card-text">@((MarkupString)category.ShortDescription)</p>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <button class="btn btn-primary" @onclick="@(() => OnCategorySelect(category.Id))" disabled="@this.isCardDisabled">@category.Name Services</button>
                                </div>
                                @if (this.user.IsInRole(GlobalConstants.AdministratorRoleName))
                                {
                                    <div>
                                        <a class="btn btn-secondary" href="/Administration/Categories/Details/@category.Id">Details</a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

@code {
    private IEnumerable<CategoryComponentViewModel> categories;
    private bool isCardDisabled;
    private ClaimsPrincipal user;

    [CascadingParameter] int? CurrentCategoryId { get; set; }

    [Parameter]
    public EventCallback<int> OnSelectCategory { get; set; }

    protected override void OnInitialized()
    {
        user = this.httpContextAccessor.HttpContext.User;
    }

    protected override void OnParametersSet()
    {
        SetCategories(this.CurrentCategoryId);
        base.OnParametersSet();
    }

    private async Task OnCategorySelect(int categoryId)
    {
        await this.OnSelectCategory.InvokeAsync(categoryId);
        this.SetCategories(categoryId);
    }

    private void SetCategories(int? id)
    {
        this.categories = this.categoriesService
        .GetAllCategories<CategoryComponentViewModel>()
        .Where(c => c.ParentCategoryId == id)
        .ToList();
    }
}
