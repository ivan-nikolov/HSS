@page "/Dashboard"
@layout AccountsLayout

@using Hss.Web.Components.RazorComponents.Orders
@using Hss.Web.Components.RazorComponents.Dashboard
@using Hss.Web.ViewModels.Components.RazorComponents.Dashboard.Orders
@using Data.Models.Enums

@inject Hss.Services.Data.Orders.IOrdersService OrdersService
@attribute [Authorize]

<div class="mt-4">
    <AddressesList></AddressesList>
</div>
<div class="d-flex justify-content-center mt-3 mb-3">
    <a class="btn btn-lg text-primary btn-outline-primary" href="/Orders/BookService">Book Service</a>
</div>
<OrdersList Orders="this.orders.Where(o => o.Status == OrderStatus.InProgress).ToList()" OrdersType="Active"></OrdersList>
<OrdersList Orders="this.orders.Where(o => o.Status == OrderStatus.Pending).ToList()" OrdersType="Pending"></OrdersList>
@code {
    private string userId;
    private List<OrderViewModel> orders;

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {

        this.userId = (await this.AuthenticationStateTask).User.GetId();
        this.orders = this.OrdersService.GetOrdersByUserId<OrderViewModel>(this.userId).Where(o => o.Status == OrderStatus.InProgress || o.Status == OrderStatus.Pending).ToList();
    }
}
